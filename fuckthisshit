#include <stdio.h>
#include <stdlib.h>

typedef struct _Node {
    int data;
    struct _Node *next;
} Node;

Node* createList(int *array, int N){
    Node *head = (Node*)malloc(sizeof(Node));
    head->data = array[0];
    head->next = NULL;
    Node* temp = head;
    for(int i=1; i<N; i++){
        temp->next = (Node*)malloc(sizeof(Node));
        temp = temp->next;
        temp->data=array[i];
    }
    temp->next = NULL;
    return head;
}

void push_front(Node** head, int val){
    Node *temp = (Node*)malloc(sizeof(Node));
    temp->data = val;
    temp->next = *head;
    *head = temp;
    return;
}

void deleteElementByIdx(Node** head, int idx){
    Node *temp = *head;
    Node *tofree;
    if(idx == 0){
        temp = temp->next;
        tofree = *head;
        *head = temp;
        free(tofree);
    }
    else{
        for(int i=0; i<idx-1; i++){
            temp = temp->next;
            if(temp->next == NULL) return;
        }
        tofree = temp->next;
        temp->next = temp->next->next;
        if(temp->next == NULL) return;
        free(tofree);
    }
    return;
}

Node* copyList(Node* head){
    Node* otherhead = (Node*)malloc(sizeof(Node));
    Node* temp = head;
    Node* other = otherhead;
    Node* tofree;
    while(temp->next!=NULL){
        other->data = temp->data;
        other->next  = (Node*)malloc(sizeof(Node));
        other = other->next;
        temp = temp->next;
    }
    other->data = temp->data;
    other->next = NULL;
    return otherhead;
}

void SwapElementByIdx(Node** head, int idx1, int idx2){
    Node *temp = *head;
    Node *pos1, *pos2;
    int extra;
    for(int i=0; i<idx1; i++){
        temp =temp->next;
        if(temp->next == NULL) return;
    }
    pos1 = temp;
    temp = *head;
    for(int i =0; i<idx2; i++){
        temp = temp->next;
        if(temp->next == NULL) return;
    }
    pos2 = temp;

    extra = pos1->data;
    pos1->data = pos2->data;
    pos2->data = extra;
    return;
}


void traversal(Node* head);
int main(){

    int T,M,inst,i;
    int val,idx1,idx2;
    scanf("%d%d", &T,&M);
    Node* head = NULL;
    int *array = (int*)malloc(sizeof(int)*M);
    for(i=0; i<M; ++i){
        scanf("%d",&array[i]);
    }
    if(M > 0){
        head = createList(array, M);
        traversal(head);
    }
    while(T--){
        scanf("%d",&inst);
        if(inst == 0){ // insert
            scanf("%d",&val);
            push_front(&head, val);
        }else if(inst == 1){ // copy link list
            Node* otherHead = copyList(head);
            /* free original list*/
            while(head != NULL){
                Node* temp = head;
                head = head->next;
                free(temp);
            }
            head = otherHead;
        }else if(inst == 2){ // delete element
            scanf("%d",&val);
            deleteElementByIdx(&head, val);
        }else if(inst == 3){ // swap link element
            scanf("%d%d",&idx1, &idx2);
            SwapElementByIdx(&head,idx1,idx2);
        }
        traversal(head);
    }

    /* free linked list*/
    while(head != NULL){
        Node* temp = head;
        head = head->next;
        free(temp);
    }
    return 0;
}
void traversal(Node* head){
    if(head == NULL)
        return;
    while(head != NULL){
        printf("%d ", head->data);
        head = head->next;
    }printf("\n");
}
